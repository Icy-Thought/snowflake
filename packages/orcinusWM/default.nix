# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.
args @ {
  release ? true,
  rootFeatures ? [
    "orcinusWM/default"
  ],
  rustPackages,
  buildRustPackages,
  hostPlatform,
  hostPlatformCpu ? null,
  hostPlatformFeatures ? [],
  target ? null,
  codegenOpts ? null,
  profileOpts ? null,
  rustcLinkFlags ? null,
  rustcBuildFlags ? null,
  mkRustCrate,
  rustLib,
  lib,
  workspaceSrc,
}: let
  workspaceSrc =
    if args.workspaceSrc == null
    then ./.
    else args.workspaceSrc;
in let
  inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
  profilesByName = {
  };
  rootFeatures' = expandFeatures rootFeatures;
  overridableMkRustCrate = f: let
    drvs = genDrvsByProfile profilesByName ({
      profile,
      profileName,
    }:
      mkRustCrate ({inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts rustcLinkFlags rustcBuildFlags;} // (f profileName)));
  in
    {
      compileMode ? null,
      profileName ? decideProfile compileMode release,
    }: let
      drv = drvs.${profileName};
    in
      if compileMode == null
      then drv
      else drv.override {inherit compileMode;};
in {
  cargo2nixVersion = "0.11.0";
  workspace = {
    orcinusWM = rustPackages.unknown.orcinusWM."0.1.0";
  };
  "registry+https://github.com/rust-lang/crates.io-index".anymap."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "anymap";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "33954243bd79057c2de7338850b85983a44588021f8a5fee574a8888c6de4344";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "autocfg";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "1.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "cfg-if";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".gethostname."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "gethostname";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c1ebd34e35c46e00bb73e81363248d627782724609fe1b6396f553f68fe3862e";
    };
    dependencies = {
      ${
        if !hostPlatform.isWindows
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "winapi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".heck."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "heck";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6d621efb26863f0e9924c6ac577e8275e5e6b77455db64ffa6c65c904e9e132c";
    };
    dependencies = {
      unicode_segmentation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.10.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "heck";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" = overridableMkRustCrate (profileName: rec {
    name = "lazy_static";
    version = "1.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" = overridableMkRustCrate (profileName: rec {
    name = "libc";
    version = "0.2.147";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b4668fb0ea861c1df094127ac5f1da3409a82116a4ba74fca2e58ef927159bb3";
    };
    features = builtins.concatLists [
      ["default"]
      ["extra_traits"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".log."0.4.19" = overridableMkRustCrate (profileName: rec {
    name = "log";
    version = "0.4.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b06a4cde4c0f271a446782e3eff8de789548ce57dbc8eca9292c27f4a42004b4";
    };
    features = builtins.concatLists [
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".matchers."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "matchers";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558";
    };
    dependencies = {
      regex_automata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".memoffset."0.6.5" = overridableMkRustCrate (profileName: rec {
    name = "memoffset";
    version = "0.6.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5aa361d4faea93603064a027415f07bd8e1d5c88c9fbf68bf56a285428fd79ce";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".nix."0.25.1" = overridableMkRustCrate (profileName: rec {
    name = "nix";
    version = "0.25.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f346ff70e7dbfd675fe90590b92d59ef2de15a8779ae305ebcbfd3f0caf59be4";
    };
    features = builtins.concatLists [
      ["acct"]
      ["aio"]
      ["default"]
      ["dir"]
      ["env"]
      ["event"]
      ["feature"]
      ["fs"]
      ["hostname"]
      ["inotify"]
      ["ioctl"]
      ["kmod"]
      ["memoffset"]
      ["mman"]
      ["mount"]
      ["mqueue"]
      ["net"]
      ["personality"]
      ["pin-utils"]
      ["poll"]
      ["process"]
      ["pthread"]
      ["ptrace"]
      ["quota"]
      ["reboot"]
      ["resource"]
      ["sched"]
      ["signal"]
      ["socket"]
      ["term"]
      ["time"]
      ["ucontext"]
      ["uio"]
      ["user"]
      ["zerocopy"]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" {inherit profileName;};
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.kernel.name == "redox")
        then "memoffset"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.6.5" {inherit profileName;};
      pin_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" {inherit profileName;};
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" = overridableMkRustCrate (profileName: rec {
    name = "nu-ansi-term";
    version = "0.46.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84";
    };
    dependencies = {
      overload = rustPackages."registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "windows"
        then "winapi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" = overridableMkRustCrate (profileName: rec {
    name = "once_cell";
    version = "1.18.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["race"]
      ["std"]
    ];
  });

  "unknown".orcinusWM."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "orcinusWM";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal workspaceSrc;
    dependencies = {
      penrose = rustPackages."registry+https://github.com/rust-lang/crates.io-index".penrose."0.3.2" {inherit profileName;};
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.17" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "overload";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".penrose."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "penrose";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5eefe76e3ad5f6194a0ad63f1ff75929e74196440daa426628736048331f45af";
    };
    features = builtins.concatLists [
      ["default"]
      ["keysyms"]
      ["penrose_keysyms"]
      ["x11rb"]
      ["x11rb-xcb"]
    ];
    dependencies = {
      anymap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anymap."0.12.1" {inherit profileName;};
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" {inherit profileName;};
      nix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nix."0.25.1" {inherit profileName;};
      penrose_keysyms = rustPackages."registry+https://github.com/rust-lang/crates.io-index".penrose_keysyms."0.1.1" {inherit profileName;};
      strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.24.1" {inherit profileName;};
      strum_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.24.3" {profileName = "__noProfile";};
      thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.41" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      x11rb = rustPackages."registry+https://github.com/rust-lang/crates.io-index".x11rb."0.11.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".penrose_keysyms."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "penrose_keysyms";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7a574df0fe3d7e0bb1fd297dd722d8aea8ea33a734d862451509814062bec2d6";
    };
    dependencies = {
      strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.20.0" {inherit profileName;};
      strum_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.20.1" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.10" = overridableMkRustCrate (profileName: rec {
    name = "pin-project-lite";
    version = "0.2.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4c40d25201921e5ff0c862a505c6557ea88568a4e3ace775ab55e93f2f4f9d57";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "pin-utils";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.63" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro2";
    version = "1.0.63";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7b368fba921b0dce7e60f5e04ec15e565b3303972b42bcfde1d0713b881959eb";
    };
    features = builtins.concatLists [
      ["default"]
      ["proc-macro"]
    ];
    dependencies = {
      unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.10" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.29" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "1.0.29";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "573015e8ab27661678357f27dc26460738fd2b6c86e46f386fde94cb5d913105";
    };
    features = builtins.concatLists [
      ["default"]
      ["proc-macro"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.63" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex."1.8.4" = overridableMkRustCrate (profileName: rec {
    name = "regex";
    version = "1.8.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d0ab3ca65655bb1e41f2a8c8cd662eb4fb035e67c3f78da1d61dffe89d07300f";
    };
    features = builtins.concatLists [
      ["std"]
      ["unicode-case"]
      ["unicode-perl"]
    ];
    dependencies = {
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.7.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "regex-automata";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132";
    };
    features = builtins.concatLists [
      ["default"]
      ["regex-syntax"]
      ["std"]
    ];
    dependencies = {
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.29" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.29" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.6.29";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1";
    };
    features = builtins.concatLists [
      ["default"]
      ["unicode"]
      ["unicode-age"]
      ["unicode-bool"]
      ["unicode-case"]
      ["unicode-gencat"]
      ["unicode-perl"]
      ["unicode-script"]
      ["unicode-segment"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "436b050e76ed2903236f032a59761c1eb99e1b0aead2c257922771dab1fc8c78";
    };
    features = builtins.concatLists [
      ["unicode-case"]
      ["unicode-perl"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.13" = overridableMkRustCrate (profileName: rec {
    name = "rustversion";
    version = "1.0.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "dc31bd9b61a32c31f9650d18add92aa83a49ba979c143eefd27fe7177b05bd5f";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "sharded-slab";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "900fba806f70c630b0a382d0d825e17a0f19fcd059a2ade1ff237bcddf446b31";
    };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.10.0" = overridableMkRustCrate (profileName: rec {
    name = "smallvec";
    version = "1.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a507befe795404456341dfab10cef66ead4c041f62b8b11bbb92bffe5d0953e0";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".strum."0.20.0" = overridableMkRustCrate (profileName: rec {
    name = "strum";
    version = "0.20.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7318c509b5ba57f18533982607f24070a55d353e90d4cae30c467cdb2ad5ac5c";
    };
    features = builtins.concatLists [
      ["derive"]
      ["strum_macros"]
    ];
    dependencies = {
      strum_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.20.1" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".strum."0.24.1" = overridableMkRustCrate (profileName: rec {
    name = "strum";
    version = "0.24.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "063e6045c0e62079840579a7e47a355ae92f60eb74daaf156fb1e84ba164e63f";
    };
    features = builtins.concatLists [
      ["default"]
      ["derive"]
      ["std"]
      ["strum_macros"]
    ];
    dependencies = {
      strum_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.24.3" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.20.1" = overridableMkRustCrate (profileName: rec {
    name = "strum_macros";
    version = "0.20.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ee8bc6b87a5112aeeab1f4a9f7ab634fe6cbefc4850006df31267f4cfb9e3149";
    };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.3.3" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.63" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.29" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.24.3" = overridableMkRustCrate (profileName: rec {
    name = "strum_macros";
    version = "0.24.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1e385be0d24f186b4ce2f9982191e7101bb737312ad61c1f2f984f34bcf85d59";
    };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.63" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.29" {inherit profileName;};
      rustversion = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.13" {profileName = "__noProfile";};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "1.0.109";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237";
    };
    features = builtins.concatLists [
      ["clone-impls"]
      ["default"]
      ["derive"]
      ["extra-traits"]
      ["parsing"]
      ["printing"]
      ["proc-macro"]
      ["quote"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.63" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.29" {inherit profileName;};
      unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.10" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".syn."2.0.23" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "2.0.23";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "59fb7d6d8281a51045d62b8eb3a7d1ce347b76f312af50cd3dc0af39c87c1737";
    };
    features = builtins.concatLists [
      ["clone-impls"]
      ["default"]
      ["derive"]
      ["extra-traits"]
      ["full"]
      ["parsing"]
      ["printing"]
      ["proc-macro"]
      ["quote"]
      ["visit-mut"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.63" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.29" {inherit profileName;};
      unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.10" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.41" = overridableMkRustCrate (profileName: rec {
    name = "thiserror";
    version = "1.0.41";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c16a64ba9387ef3fdae4f9c1a7f07a0997fce91985c0336f1ddc1822b3b37802";
    };
    dependencies = {
      thiserror_impl = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.41" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.41" = overridableMkRustCrate (profileName: rec {
    name = "thiserror-impl";
    version = "1.0.41";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d14928354b01c4d6a4f0e549069adef399a284e7995c7ccca94e8a07a5346c59";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.63" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.29" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.23" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.7" = overridableMkRustCrate (profileName: rec {
    name = "thread_local";
    version = "1.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3fdd6f064ccff2d6567adcb3873ca630700f00b5ad3f060c25b5dcfd9a4ce152";
    };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" = overridableMkRustCrate (profileName: rec {
    name = "tracing";
    version = "0.1.37";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8ce8c33a8d48bd45d624a6e523445fd21ec13d3653cd51f681abf67418f54eb8";
    };
    features = builtins.concatLists [
      ["attributes"]
      ["default"]
      ["log"]
      ["std"]
      ["tracing-attributes"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.19" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.10" {inherit profileName;};
      tracing_attributes = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.26" {profileName = "__noProfile";};
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.26" = overridableMkRustCrate (profileName: rec {
    name = "tracing-attributes";
    version = "0.1.26";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5f4f31f56159e98206da9efd823404b79b6ef3143b4a7ab76e67b1751b25a4ab";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.63" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.29" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.23" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" = overridableMkRustCrate (profileName: rec {
    name = "tracing-core";
    version = "0.1.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0955b8137a1df6f1a2e9a37d8a6656291ff0297c1a97c24e0d8425fe2312f79a";
    };
    features = builtins.concatLists [
      ["default"]
      ["once_cell"]
      ["std"]
      ["valuable"]
    ];
    dependencies = {
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      ${
        if false
        then "valuable"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "tracing-log";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "78ddad33d2d10b1ed7eb9d1f518a5674713876e97e5bb9b7345a7984fbb4f922";
    };
    features = builtins.concatLists [
      ["log-tracer"]
      ["std"]
    ];
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.19" {inherit profileName;};
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.17" = overridableMkRustCrate (profileName: rec {
    name = "tracing-subscriber";
    version = "0.3.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "30a651bc37f915e81f087d86e62a18eec5f79550c7faff886f7090b4ea757c77";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["ansi"]
      ["default"]
      ["env-filter"]
      ["fmt"]
      ["matchers"]
      ["nu-ansi-term"]
      ["once_cell"]
      ["regex"]
      ["registry"]
      ["sharded-slab"]
      ["smallvec"]
      ["std"]
      ["thread_local"]
      ["tracing"]
      ["tracing-log"]
    ];
    dependencies = {
      matchers = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matchers."0.1.0" {inherit profileName;};
      nu_ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.8.4" {inherit profileName;};
      sharded_slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.4" {inherit profileName;};
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.10.0" {inherit profileName;};
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.7" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" {inherit profileName;};
      tracing_log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.3" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.10" = overridableMkRustCrate (profileName: rec {
    name = "unicode-ident";
    version = "1.0.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "22049a19f4a68748a168c0fc439f9516686aa045927ff767eca0a85101fb6e73";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.10.1" = overridableMkRustCrate (profileName: rec {
    name = "unicode-segmentation";
    version = "1.10.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1dd624098567895118886609431a7c3b8f516e41d30e0643f03d94592a147e36";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "valuable";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.3.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419";
    };
    features = builtins.concatLists [
      ["consoleapi"]
      ["errhandlingapi"]
      ["fileapi"]
      ["handleapi"]
      ["processenv"]
      ["sysinfoapi"]
      ["winsock2"]
    ];
    dependencies = {
      ${
        if hostPlatform.config == "i686-pc-windows-gnu"
        then "winapi_i686_pc_windows_gnu"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" {inherit profileName;};
      ${
        if hostPlatform.config == "x86_64-pc-windows-gnu"
        then "winapi_x86_64_pc_windows_gnu"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-wsapoll."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "winapi-wsapoll";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "44c17110f57155602a80dca10be03852116403c9ff3cd25b079d666f2aa3df6e";
    };
    dependencies = {
      ${
        if hostPlatform.isWindows
        then "winapi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".x11rb."0.11.1" = overridableMkRustCrate (profileName: rec {
    name = "x11rb";
    version = "0.11.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "cdf3c79412dd91bae7a7366b8ad1565a85e35dd049affc3a6a2c549e97419617";
    };
    features = builtins.concatLists [
      ["allow-unsafe-code"]
      ["libc"]
      ["randr"]
      ["render"]
    ];
    dependencies = {
      gethostname = rustPackages."registry+https://github.com/rust-lang/crates.io-index".gethostname."0.2.3" {inherit profileName;};
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if hostPlatform.isUnix
        then "nix"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".nix."0.25.1" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "winapi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "winapi_wsapoll"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-wsapoll."0.1.1" {inherit profileName;};
      x11rb_protocol = rustPackages."registry+https://github.com/rust-lang/crates.io-index".x11rb-protocol."0.11.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".x11rb-protocol."0.11.1" = overridableMkRustCrate (profileName: rec {
    name = "x11rb-protocol";
    version = "0.11.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e0b1513b141123073ce54d5bb1d33f801f17508fbd61e02060b1214e96d39c56";
    };
    features = builtins.concatLists [
      ["default"]
      ["nix"]
      ["randr"]
      ["render"]
      ["std"]
    ];
    dependencies = {
      ${
        if hostPlatform.isUnix
        then "nix"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".nix."0.25.1" {inherit profileName;};
    };
  });
}
